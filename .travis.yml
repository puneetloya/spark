# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Spark provides this Travis CI configuration file to help contributors
# check Scala/Java style conformance and JDK7/8 compilation easily
# during their preparing pull requests.
#   - Scalastyle is executed during `maven install` implicitly.
#   - Java Checkstyle is executed by `lint-java`.
# See the related discussion here.
# https://github.com/apache/spark/pull/12980

# 1. Choose OS (Ubuntu 14.04.3 LTS Server Edition 64bit, ~2 CORE, 7.5GB RAM)
sudo: required
dist: trusty

# 2. Choose language, target JDK and env's for parallel builds.
language: java
jdk:
  - oraclejdk8
env:  # Used by the install section below.
  # Configure the unit test build for spark core and kubernetes modules,
  # while excluding some flaky unit tests using a regex pattern.
  - PHASE=test  \
    PROFILES="-Pmesos -Pyarn -Phadoop-2.7 -Pkubernetes"  \
    MODULES="-pl core,resource-managers/kubernetes/core -am"  \
    ARGS="-Dtest=none -Dsuffixes='^org\.apache\.spark\.(?!ExternalShuffleServiceSuite|SortShuffleSuite$|rdd\.LocalCheckpointSuite$|deploy\.SparkSubmitSuite$|deploy\.StandaloneDynamicAllocationSuite$).*'"
  # Configure the full build.
  - PHASE=install  \
    PROFILES="-Pmesos -Pyarn -Phadoop-2.7 -Pkubernetes -Pkinesis-asl -Phive -Phive-thriftserver"  \
    MODULES=""  \
    ARGS="-T 4 -q -DskipTests"

# 3. Setup cache directory for SBT and Maven.
cache:
  directories:
  - $HOME/.sbt
  - $HOME/.m2

# 4. Turn off notifications.
notifications:
  email: false

# 5. Run maven build before running lints.
install:
  - export MAVEN_SKIP_RC=1
  - build/mvn ${PHASE} ${PROFILES} ${MODULES} ${ARGS}

# 6. Run lints.
script:
  - dev/lint-java
  - dev/lint-scala
